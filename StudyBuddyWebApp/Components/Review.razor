@page "/leave-review"
@inject AcademicService academicService  <!-- Inject AcademicService -->

<h3>Leave a Review</h3>

@if (isSubmitted)
{
    <p>Thank you for your review!</p>
}
else
{
    <form @onsubmit="HandleSubmit">
        <textarea @bind="reviewText" rows="4" cols="50" placeholder="Write your review here..."></textarea><br />
        <button type="submit">Submit Review</button>
        <button type="button" @onclick="HandleUpdate">Update Review</button>
        <button type="button" @onclick="HandleDelete">Delete Review</button>
    </form>
}

@code {
    private string reviewText = "";
    private bool isSubmitted = false;
    private int reviewId = 1; // Example review ID; you'll likely set this dynamically based on the current review

    private async Task HandleSubmit()
    {
        var newReview = new Review { ReviewText = reviewText }; // Create a review object
        await academicService.AddReview(newReview);  // Call the service method to add a review
        isSubmitted = true;  // Mark the form as submitted
    }

    private async Task HandleUpdate()
    {
        // Update review with the current ID and new text
        await academicService.UpdateReview(reviewId, reviewText, isApproved: true);  
        isSubmitted = true;
    }

    private async Task HandleDelete()
    {
        await academicService.DeleteReview(reviewId);  // Delete review by ID
        isSubmitted = true;
    }
}
