@page "/login"
@inject IAuthService authService
@inject NavigationManager navMgr
@rendermode InteractiveServer

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>Id:</label>
                <input type="number" @bind="id" />
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="password" />
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="LoginAsync">Log in</button>
            </div>
        </div>
        
    </NotAuthorized>
    <Authorized>
        <p>You are already logged in</p>
        <button @onclick="Logout" class="loginbtn">
            Log out
        </button>
    </Authorized>
</AuthorizeView>

@code {
    private int id ;
    private string email = "";
    private string password = "";
    private string errorLabel = "";
    private async Task LoginAsync()
    {   
        errorLabel = "";
        try
        {
            await authService.LoginAsync(id, password);
            navMgr.NavigateTo("/user-profile");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
        
    }
    private async Task Logout()
    {
        await authService.LogoutAsync();
        navMgr.NavigateTo("/login");
    }
    
}