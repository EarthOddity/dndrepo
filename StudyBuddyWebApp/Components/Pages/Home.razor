@page "/"
@using StudyBuddyWebApp.Components
@inject ICalendarService eventService
@using System.Security.Claims
@using StudyBuddyWebApp.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager 
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer
@attribute [Authorize ("MustBeStudent")]

<div class="study-buddy-container">
    <section class="introduction">
        <h2>Welcome to StudyBuddy!</h2>
        <p>Connect with your peers, discover study resources, and find the perfect tutor to help you excel in your
            academic
            journey!</p>
    </section>

    <main class="content-grid">
        <div class="events-section">
            <h3>Upcoming Events</h3>
            @if (events == null)
            {
                <p>Loading events...</p>
            }
            else if (!events.Any())
            {
                <p>No Upcoming events.</p>
            }
            else
            {
                <CalendarDay Events="events" />
            }
            <div class="button-container">
                <button class="create-event-button" @onclick ="CreateEvent" >Create A New Event</button>
            </div>
        </div>
        @* CHECK OUT THE OVERVIEW MATERIALS COMPONENT TO USE HERE *@
        <div class="materials-section">
            <h3>Saved Materials</h3>
            <div class="materials-grid">
                @if (savedMaterials == null)
                {
                    <p>Loading materials...</p>
                }
                else if (!savedMaterials.Any())
                {
                    <p>No materials available.</p>
                }
                else
                {
                    @foreach (var material in savedMaterials)
                    {
                        <div class="material-card">
                            <h4>@material.title</h4>
                            <p>@material.description</p>
                        </div>
                    }
                }
            </div>
        </div>
    </main>
</div>

@code {
    [Inject]
    private ITeachingMaterialService? TeachingMaterialService { get; set; }

    private List<TeachingMaterial> savedMaterials = new List<TeachingMaterial>();
    private List<SBEvent> events = new List<SBEvent>();
    private int calendarId;
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private int id;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;


    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        if (!isLoggedIn) return;
        userClaims = user.Claims;
        id = int.Parse(user.Claims.First(claim => claim.Type.Equals("id")).Value);
        calendarId = await eventService.GetCalendarIdByStudentId(id);
        Console.WriteLine("Calendar id" + calendarId);
        events = (await eventService.GetEventsByCalendarId(calendarId)).ToList();
    }
    @* protected override async Task OnInitializedAsync()
    {
        if (TeachingMaterialService != null)
        {
            savedMaterials = (await TeachingMaterialService.GetAllMaterials()).ToList();
        }

        // mock teaching material
        var mockedMaterial = new TeachingMaterial(
        3,
        "Math 101 - Derivatives",
        "Extra materials, notes and explanations to help on courses about Derivatives",
        new Student { id = 1, name = "John Austin" },
        true
        );
    using System.Security.Claims;

        savedMaterials.Add(mockedMaterial);
    } *@

    private void CreateEvent()
    {
        NavigationManager.NavigateTo($"/calendar/{calendarId}/event");
    }


}

<style>
    .study-buddy-container {
        margin: 0 auto;
        padding: 20px;
        color: #e2e8f0;
    }

    .introduction {
        background-color: #1e293b;
        padding: 20px;
        border-radius: 8px;
        margin: 30px 0;
    }

    .content-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }

    .events-section,
    .materials-section {
        background-color: #1e293b;
        padding: 20px;
        border-radius: 8px;
        min-height: fit-content;
        height: 800px;
    }

    .materials-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
    }

    .material-card {
        background-color: #0f172a;
        padding: 15px;
        border-radius: 6px;
    }
       .create-event-button {
        background: linear-gradient(135deg, #71b3e5 0%, #013faa 100%);
        color: #000000;
        border: none;
        text-align: center;
        padding: 10px 15px;
        cursor: pointer;
        margin-right: 30px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: background 0.3s ease, transform 0.2s ease;
    }
</style>